#!/system/xbin/bash
root="/sdcard/.abt"
export HOME="/sdcard"

function backup() {
	[[ -z $1 ]] && print_usage && exit

	profile=$1
	dir=$root/$profile
	source $dir/conf
	options=""

	[[ -f $dir/excludes ]] && options="$options --exclude-from=$dir/excludes"

	rsync -azHE --recursive -vh --del --delete-excluded --numeric-ids  \
		--files-from=$dir/files  \
		$options \
		$src $host:$dest
}

function restore() {
	[[ -z $1 ]] && print_usage && exit
	
	profile=$1
	dir=$root/$profile
	source $dir/conf
	
	# restore app
	ssh $host "if [[ -d $dest/data/app ]]; then for app in $dest/data/app/*.apk; do $adb install \$app; done; fi"
	
	# restore data
        rsync -rlptDzHE --recursive -vh --numeric-ids  \                               
	        --exclude=/data/app \                                                  
                $host:$dest $src
	
	# fix /data/data owner group
	ret=`ssh $host "[[ -d $dest/data/data ]] && echo true || echo false"`
	if [[ $ret = 'true' ]]; then
	        for data in /data/data/*; do                                                   
		        owner=`ls -ld $data | awk '{print $3}'`                                
	                group=`ls -ld $data | awk '{print $4}'`                                
	                echo "chown $owner:$group $data"                                       
	                chown $owner:$group -R $data                                    
	                chown system:system -R $data/lib                                
	        done  
	fi
	
	
	echo "reboot the system now..."
	sleep 1
}

function list() {
	ls $root
}

function print_usage() {
cat <<EOF
USAGE: abt <action> [arguments ..]

  ACTION
    backup <profile>     # backup system
    restore <profile>    # restore system
    list                 # list all profiles
EOF
}


function cli() {
	case $1 in
		backup )
			backup $2
			;;
		restore )
			restore $2
			;;
		list )
			list
			;;
		* )
			print_usage
			;;
	esac
}

cli $*
